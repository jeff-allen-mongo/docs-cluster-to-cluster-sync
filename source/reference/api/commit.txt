.. _c2c-api-commit:

==========
``commit``
==========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Description
-----------

Commits the synchronization operation to the destination cluster.

Requirement
-----------

To use the ``commit`` endpoint, the following conditions must be met:

- The {+c2c-product-name+} must be in the ``RUNNING`` state. 
- The ``canCommit`` boolean returned by the :ref:`progress
  <c2c-api-progress>` endpoint must be ``true``.

Request
-------

.. code-block:: http

   POST /api/v1/commit 

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

This endpoint does not use HTTP request body parameters.

Response
--------

.. include:: /includes/api/tables/basic-response.rst

Example
-------

The following example commits the synchronization operation to the
destination cluster.

Confirm that the Synchronization is Ready
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Before sending a request to the ``commit`` endpoint, use the
:ref:`progress <c2c-api-progress>` endpoint to confirm that the
synchronization is ready to be committed.

Request
```````

.. literalinclude:: /includes/api/requests/progress.json
   :language: shell

Response
````````

.. literalinclude:: /includes/api/responses/progress.json
   :language: shell
   :emphasize-lines: 5

The ``progress`` endpoint returned ``"canCommit":true``, which means
that the ``commit`` request can run successfully.

Send the Commit Request
~~~~~~~~~~~~~~~~~~~~~~~

The following command sends a request to the ``commit`` endpoint:

Request
```````

.. literalinclude:: /includes/api/requests/commit.sh
   :language: shell

Response
````````

.. literalinclude:: /includes/api/responses/success.json
   :language: shell

Behavior
--------

If the ``commit`` request is successful, {+c2c-product-name+} enters the
``COMMITTING`` state, then automatically transitions to the
``COMMITTED`` state.

The amount of time that it takes {+c2c-product-name+} to transition from
the ``COMMITTING`` to the ``COMMITTED`` state is indicated by the
``lagTimeSeconds`` in the :ref:`progress <c2c-api-progress>`
endpoint output.
