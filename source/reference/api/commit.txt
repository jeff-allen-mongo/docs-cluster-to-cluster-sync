.. _c2c-api-commit:

==========
``commit``
==========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Description
-----------

Commits the synchronization operation to the destination cluster.

Requirements
------------

Before using the ``commit`` endpoint:

- Stop your application. This ensures that no additional writes occur on
  the source cluster.

- Use the :ref:`progress <c2c-api-progress>` endpoint to confirm the
  following values:

  - ``state: "RUNNING"``
  - ``canCommit: true``
  - ``lagTimeSeconds: 0``

    .. note:: lagTimeSeconds

       ``lagTimeSeconds`` indicates the time between the last applied
       event and time of the current latest event.
       
       When ``lagTimeSeconds`` is ``0``, this means that the source and
       destination clusters are in a consistent state.

Request
-------

.. code-block:: http

   POST /api/v1/commit 

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: includes/api/facts/no-body-parameters.rst

Response
--------

.. include:: /includes/api/tables/basic-response.rst

Example
-------

The following example commits the synchronization operation to the
destination cluster.

Confirm that the Synchronization is Ready
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Before sending a request to the ``commit`` endpoint, use the
:ref:`progress <c2c-api-progress>` endpoint to confirm that the
synchronization is ready to be committed.

Request
```````

.. literalinclude:: /includes/api/requests/progress.sh
   :language: shell

Response
````````

.. literalinclude:: /includes/api/responses/progress.json
   :language: shell
   :emphasize-lines: 5

The ``progress`` endpoint returned ``"canCommit":true``, and
``"lagTimeSeconds":0``, which means that the ``commit`` request can run
successfully.

Send the Commit Request
~~~~~~~~~~~~~~~~~~~~~~~

The following command sends a request to the ``commit`` endpoint:

Request
```````

.. literalinclude:: /includes/api/requests/commit.sh
   :language: shell

Response
````````

.. literalinclude:: /includes/api/responses/success.json
   :language: json

Behavior
--------

If the ``commit`` request is successful, {+c2c-product-name+} enters the
``COMMITTING`` state, then automatically transitions to the
``COMMITTED`` state.
