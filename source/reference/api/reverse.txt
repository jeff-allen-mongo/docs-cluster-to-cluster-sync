.. _c2c-api-reverse:

===========
``reverse``
===========

.. include:: /includes/preview-warning

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Description
-----------

Reverses the direction of a committed sync operation.

For example, if you have a ``COMMITTED`` a sync operation where
``cluster0`` is the source and ``cluster1`` is the destination, and only
new writes occur on the destination cluster after the operation is
``COMMITTED``, then you can use the ``reverse`` endpoint to sync writes
from ``cluster1`` to ``cluster0``.

Requirements
------------

To use the ``reverse`` endpoint:

- You must have started your original sync operation with the
  ``reversible`` and ``enableUserWriteBlocking`` options set to
  ``true``.

- {+c2c-product-name+} must be in the ``COMMITTED`` state.

Request
-------

.. code-block:: http
   :copyable: false

   POST /api/v1/reverse 

Request Body Parameters
~~~~~~~~~~~~~~~~~~~~~~~

.. include:: includes/api/facts/no-body-parameters.rst

Response
--------

.. include:: /includes/api/tables/basic-response.rst

Example
-------

The following reverses the direction of a committed sync operation.

Request
~~~~~~~

.. literalinclude:: /includes/api/requests/reverse.sh
   :language: shell

Response
~~~~~~~~

.. literalinclude:: /includes/api/responses/success.json
   :language: json
   :copyable: false

Behavior
--------

If the ``reverse`` request is successful, {+c2c-product-name+} enters the
``RUNNING`` state, with replication going in the reverse direction from
the original sync job.

To view the mapping direction for the synchronization of the source and
destination clusters, use the :ref:`progress <c2c-api-progress>`
endpoint and check the ``directionMapping`` object.
